# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# remap caps lock to use as super
#exec_always setxkbmap -option caps:super
#exec xmodmap .Xmodmap

#keep screen from blanking
exec xset dpms 0 0 0 && xset s noblank  && xset s off
#exec ~/.screenlayout/louisville.sh
exec sleep 1
exec picom --config ~/.config/picom.config -b
exec nitrogen --restore

set $super Mod4
set $menu Mod5
set $caps Mod3

# set $menu Mod3
# set $caps Mod5

bindsym $super+x exec xmodmap ~/.Xmodmap

# bindsym $super+ctrl+x exec setxkbmap -model pc105 -layout us -option grp:alt_shift_toggle 

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 3
new_float normal

# Hide borders
hide_edge_borders none

#change borders
bindsym $super+1 border none
bindsym $super+2 border pixel 3
bindsym $super+3 border pixel 9
bindsym $super+4 border normal

#find cursor
bindsym $super+c exec /home/kevin/bin/find-cursor

#ClickUp
bindsym $super+u exec google-chrome --app=http://clickup.com 

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:DejaVu Sans Mono 1
font pango:RobotoMono Nerd Font Book 5

# Use Mouse+$caps to drag floating windows
floating_modifier $caps

# start a terminal
bindsym $caps+ctrl Return exec nitrogen --restore
#bindsym $caps+Return exec terminator, mode "default"
bindcode 166 exec terminator, mode "default"
bindsym ctrl+mod1+Return exec alacritty
bindsym $caps+Return exec ~/.cargo/bin/alacritty, mode "default"
bindsym $super+Return exec ~/bin/alacritty-vertical-i3.sh

# '>'
bindcode $caps+shift+60 move position center
bindcode $super+60 move position center
#bindsym $super+f exec nautilus
#bindsym $super+f exec thunar
bindsym $super+f exec nautilus -w

bindsym $caps+a exec ~/bin/myrofi-generic-menu.sh MyScripts scripts
bindsym $caps+0 exec ~/bin/mysystem.sh
bindsym $caps+b exec ~/bin/myi3commands.sh
bindsym $caps+y exec ~/bin/myi3workspaces.sh
bindsym $caps+u exec ~/bin/myi3workspaces_others.sh
bindsym $caps+shift+y exec ~/bin/mymv2i3workspaces.sh

bindsym $caps+8 exec ~/.i3/scripts/i3-layout-manager/layout_manager.sh

# rofi popup launcher
bindsym $caps+space exec rofi -show drun -show-icons
bindsym $caps+semicolon exec rofi -show window
bindsym $caps+7 exec rofi -show window
bindsym $caps+ctrl+f exec rofi  -show fb -modi fb:/home/kevin/.rofi/rofi-file-browser.sh

# shutter for screen capture
#bindsym $caps+shift+p exec shutter -s
bindsym $caps+shift+p exec flameshot launcher 

#Management
bindsym $caps+shift+f exec thunar

# htop
bindsym $caps+t exec terminator -r HTOP -e htop

#Skippy osx expose <$caps + =>
bindcode $caps+21 exec skippy-xd

# set screen layout
bindsym $caps+ctrl+s exec .screenlayout/louisville.sh

# kill focused window
bindsym $caps+Shift+q kill

################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

exec --no-startup-id volumeicon
# used for usb logictech headset volume control
exec --no-startup-id pasystray

################################################################################################

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

bindsym $super+Shift+x --release exec --no-startup-id xkill

focus_follows_mouse no

# change focus
bindsym $caps+j focus down
bindsym $caps+k focus up
bindsym $caps+l focus right
bindsym $caps+h focus left

bindsym KP_Down focus down
bindsym KP_Up focus up
bindsym KP_Right focus right
bindsym KP_Left focus left

# resize windows using arrow keys
bindsym $caps+Left resize shrink width 5 px or 5 ppt
bindsym $caps+Down resize shrink height 5 px or 5 ppt
bindsym $caps+Up resize grow height 5 px or 5 ppt
bindsym $caps+Right resize grow width 5 px or 5 ppt

# move focused window
bindsym $caps+Shift+j move down
bindsym $caps+Shift+k move up
bindsym $caps+Shift+l move right
bindsym $caps+Shift+h move left

# alternatively, you can use the cursor keys:
bindsym $caps+Shift+Left move left
bindsym $caps+Shift+Down move down
bindsym $caps+Shift+Up move up
bindsym $caps+Shift+Right move right

# workspace back and forth (with/without active container)
#workspace_auto_back_and_forth yes
#bindsym $caps+b workspace back_and_forth
#bindsym $caps+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $caps+o split h;exec rofi -e 'tile horizontally'
bindsym $caps+v split v;exec rofi -e 'tile vertically'
bindsym $caps+q split toggle

# toggle fullscreen mode for the focused container
bindsym $caps+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $caps+s layout stacking
bindsym $caps+w layout tabbed
bindsym $caps+e layout toggle split

# change focus between tiling / floating windows
#bindsym $caps+space focus mode_toggle

# toggle sticky
bindsym $caps+$super+s sticky toggle

# focus the parent container
#bindsym $caps+a focus parent

# toggle tiling / floating
bindsym $caps+i floating toggle

# move the currently focused window to the scratchpad
bindsym $caps+m move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $caps+n scratchpad show

# Workspace names
set $ws1 1:
set $ws2 2:
set $ws3 3:
set $ws3 4:

workspace 1 output DP-1
workspace 2 output HDMI-1
workspace 3 output Screen 0

# switch to workspace
bindsym $caps+1 workspace 1
bindsym $caps+2 workspace 2
bindsym $caps+3 workspace 3
bindsym $caps+4 workspace 4
bindsym $caps+5 workspace 5
bindsym $caps+6 workspace 6
#bindsym $caps+7 workspace 7
#bindsym $caps+8 workspace 8

bindsym $caps+Mod2+KP_1 workspace 1
bindsym $caps+Mod2+KP_2 workspace 2
bindsym $caps+Mod2+KP_3 workspace 3
bindsym $caps+Mod2+KP_4 workspace 4
bindsym $caps+Mod2+KP_5 workspace 5
bindsym $caps+Mod2+KP_6 workspace 6
bindsym $caps+Mod2+KP_7 workspace 7
bindsym $caps+Mod2+KP_8 workspace 8
bindsym $caps+Mod2+KP_9 workspace 9
bindsym $caps+Mod2+KP_0 workspace 10

# switch to workspace - alt hotkey
bindsym $menu+1 workspace 1
bindsym $menu+2 workspace 2
bindsym $menu+3 workspace 3
bindsym $menu+4 workspace 4
bindsym $menu+5 workspace 5
bindsym $menu+6 workspace 6
bindsym $menu+7 workspace 7
bindsym $menu+8 workspace 8

#navigate workspaces next / previous
bindcode $caps+60 workspace next
bindcode $caps+59 workspace prev

# Move focused container to workspace
bindsym $super+Shift+1 move container to workspace number 1
bindsym $super+Shift+2 move container to workspace number 2
bindsym $super+Shift+3 move container to workspace number 3
bindsym $super+Shift+4 move container to workspace number 4
bindsym $super+Shift+5 move container to workspace number 5
bindsym $super+Shift+6 move container to workspace number 6
bindsym $super+Shift+7 move container to workspace number 7
bindsym $super+Shift+8 move container to workspace number 8

# Move focused container to workspace
bindsym $caps+Ctrl+Mod2+KP_1 move container to workspace number 1;workspace 1
bindsym $caps+Ctrl+Mod2+KP_2 move container to workspace number 2;workspace 2
bindsym $caps+Ctrl+Mod2+KP_3 move container to workspace number 3;workspace 3
bindsym $caps+Ctrl+Mod2+KP_4 move container to workspace number 4;workspace 4
bindsym $caps+Ctrl+Mod2+KP_5 move container to workspace number 5;workspace 5
bindsym $caps+Ctrl+Mod2+KP_6 move container to workspace number 6;workspace 6
bindsym $caps+Ctrl+Mod2+KP_7 move container to workspace number 7;workspace 7
bindsym $caps+Ctrl+Mod2+KP_8 move container to workspace number 8;workspace 8
bindsym $caps+Ctrl+Mod2+KP_9 move container to workspace number 9;workspace 9
bindsym $caps+Ctrl+Mod2+KP_0 move container to workspace number 10;workspace 10

bindsym $caps+Shift+1 move container to workspace number 1
bindsym $caps+Shift+2 move container to workspace number 2
bindsym $caps+Shift+3 move container to workspace number 3
bindsym $caps+Shift+4 move container to workspace number 4
bindsym $caps+Shift+5 move container to workspace number 5
bindsym $caps+Shift+6 move container to workspace number 6
bindsym $caps+Shift+7 move container to workspace number 7
bindsym $caps+Shift+8 move container to workspace number 8

# Move to workspace with focused container
bindsym $caps+$super+1 move container to workspace number 1; workspace 1
bindsym $caps+$super+2 move container to workspace number 2; workspace 2
bindsym $caps+$super+3 move container to workspace number 3; workspace 3
bindsym $caps+$super+4 move container to workspace number 4; workspace 4
bindsym $caps+$super+5 move container to workspace number 5; workspace 5
bindsym $caps+$super+6 move container to workspace number 6; workspace 6
bindsym $caps+$super+7 move container to workspace number 7; workspace 7
bindsym $caps+$super+8 move container to workspace number 8; workspace 8

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. 
# Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). 
#If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $super+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
  bindsym o      mode "$mode_gaps_outer"
  bindsym i      mode "$mode_gaps_inner"
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
  bindsym plus  gaps inner current plus 5
  bindsym minus gaps inner current minus 5
  bindsym 0     gaps inner current set 0

  bindsym Shift+plus  gaps inner all plus 5
  bindsym Shift+minus gaps inner all minus 5
  bindsym Shift+0     gaps inner all set 0

  bindsym Return mode "default"
  bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
  bindsym plus  gaps outer current plus 5
  bindsym minus gaps outer current minus 5
  bindsym 0     gaps outer current set 0

  bindsym Shift+plus  gaps outer all plus 5
  bindsym Shift+minus gaps outer all minus 5
  bindsym Shift+0     gaps outer all set 0

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# Open applications on specific workspaces
#assign [class="Pidgin"] 8

# Open specific applications in floating mode
for_window [window_role="HTOP"] floating enable
for_window [window_role="HTOP"] resize set width 1000
for_window [window_role="HTOP"] resize set height 600
for_window [window_role="HTOP"] move postion center
for_window [title="HTOP"] floating enable
for_window [title="HTOP"] resize set width 1200
for_window [title="HTOP"] resize set height 800
for_window [title="HTOP"] move postion center
for_window [title="FLOATER"] floating enable
for_window [title="FLOATER"] move postion 10 10
for_window [title="FLOATER"] resize set width 1200
for_window [title="FLOATER"] resize set height 800
for_window [class="Remmina"] floating enable
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [title="WEATHER"] fullscreen enable
#for_window [class="Gimp"] floating enable border normal

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $caps+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym Ctrl+mod1+r restart

# exit i3 (logs you out of your X session)
bindsym $caps+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

#Remmina
# bindsym $caps+shift+r mode "$remmina_sys"
# #set $remmina_sys <f>inlogic   <g>unnison  fish<b>owl  <n>ew server  new g<u>nnison
# set $remmina_sys <f>inlogic   <g>unnison  fish<b>owl
# mode "$remmina_sys" {
#   # bindsym f exec remmina -c .remmina/finlogic.remmina, mode "default"
#   # bindsym g exec remmina -c .remmina/gunnison.remmina, mode "default"
#   bindsym b exec remmina -c .remmina/fishbowl.remmina, mode "default"
#   bindsym f exec remmina -c .remmina/NewFinlogicServer.remmina, mode "default"
#   bindsym g exec remmina -c .remmina/NewGunnisonServer.remmina, mode "default"
#
#   # exit mode: "Enter" or "Escape"
#   bindsym Return mode "default"
#   bindsym Escape mode "default"
# }

#playerctl with rofi
bindsym  $caps+p exec "~/bin/myrofi-playerctl.sh"

bindsym  $super+r exec "~/bin/myremmina-list.sh"
bindsym  $super+shift+r exec "~/bin/myremmina-passwords.sh"

#Volume stuff
bindsym $super+v mode "$vol_system"
set $vol_system (+)volup   (-)voldown   (0)mute/unmute (p)avucontrol
mode "$vol_system" {
  bindsym equal exec amixer -D pulse sset Master 2%+
    bindsym minus exec amixer -D pulse sset Master 2%-
    bindsym 0 exec amixer -D pulse set Master 1+ toggle
    bindsym p exec pavucontrol-qt; mode "default"

    bindsym k exec amixer -D pulse sset Master 2%+
    bindsym j exec amixer -D pulse sset Master 2%-
    bindsym h exec amixer -D pulse set Master 1+ toggle

    bindcode 123 exec amixer -D pulse sset Master 2%+
    bindcode 122 exec amixer -D pulse sset Master 2%-

# exit mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindcode 123 exec amixer -D pulse sset Master 2%+
bindcode 122 exec amixer -D pulse sset Master 2%-

#Move mouse via keyboard
bindsym $caps+z exec xdotool click 1
bindsym $caps+shift z exec xdotool mousedown 1
bindsym $caps+c exec xdotool click 2
bindsym $caps+x exec xdotool click 3
bindsym $caps+shift+x exec xdotool mouseup 1
bindsym $caps+Ctrl+Right exec xdotool mousemove_relative 20 0
bindsym $caps+Ctrl+Left exec xdotool mousemove_relative -- -20 0
bindsym $caps+Ctrl+Up exec xdotool mousemove_relative -- 0 -20
bindsym $caps+Ctrl+Down exec xdotool mousemove_relative 0 20

bindsym $caps+Ctrl+g exec google-chrome --new-window https://work.g4cpro.com

mode "mouse" {
# set your three speeds here

  set $slow 1
    set $quick 10
    set $fast 200

# Mouse movement (slow/fine-tuned) -- vim keybindings

    bindsym h exec xdotool mousemove_relative -- -$quick 0
    bindsym j exec xdotool mousemove_relative 0 $quick
    bindsym k exec xdotool mousemove_relative -- 0 -$quick
    bindsym l exec xdotool mousemove_relative $quick 0

# Mouse movement (slow/fine-tuned) -- arrow keys

    bindsym Left exec xdotool mousemove_relative -- -$quick 0
    bindsym Down exec xdotool mousemove_relative 0 $quick
    bindsym Up exec xdotool mousemove_relative -- 0 -$quick
    bindsym Right exec xdotool mousemove_relative $quick 0

# Mouse movement (quicker) -- vim keybindings

    bindsym $super+h exec xdotool mousemove_relative -- -$fast 0
    bindsym $super+j exec xdotool mousemove_relative 0 $fast
    bindsym $super+k exec xdotool mousemove_relative -- 0 -$fast
    bindsym $super+l exec xdotool mousemove_relative $fast 0

# Mouse movement (quicker) -- arrow keys

    bindsym $super+Left exec xdotool mousemove_relative -- -$fast 0
    bindsym $super+Down exec xdotool mousemove_relative 0 $fast
    bindsym $super+Up exec xdotool mousemove_relative -- 0 -$fast
    bindsym $super+Right exec xdotool mousemove_relative $fast 0

# Mouse movement (fast) -- vim keybindings

    bindsym Shift+h exec xdotool mousemove_relative -- -$slow 0
    bindsym Shift+j exec xdotool mousemove_relative 0 $slow
    bindsym Shift+k exec xdotool mousemove_relative -- 0 -$slow
    bindsym Shift+l exec xdotool mousemove_relative $slow 0

# Mouse movement (fast) -- arrow keys

    bindsym Shift+Left exec xdotool mousemove_relative -- -$slow 0
    bindsym Shift+Down exec xdotool mousemove_relative 0 $slow
    bindsym Shift+Up exec xdotool mousemove_relative -- 0 -$slow
    bindsym Shift+Right exec xdotool mousemove_relative $slow 0

# Mouse movement (special down-right)

    bindsym m exec xdotool mousemove_relative 10 10

# Left Click
    bindsym f exec xdotool click 1

# Middle Click
    bindsym d exec xdotool click 2

# Right Click
    bindsym s exec xdotool click 3

# Left Click-and-drag
    bindsym Shift+f exec xdotool mousedown 1

# Middle Click-and-drag
    bindsym Shift+d exec xdotool mousedown 2

# Right Click-and-drag
    bindsym Shift+s exec xdotool mousedown 3

# Left Drag release
    bindsym Ctrl+f exec xdotool mouseup 1

# Middle Drag release
    bindsym Ctrl+d exec xdotool mouseup 2

# Right Drag release
    bindsym Ctrl+s exec xdotool mouseup 3


# return to normal keybindings -- IMPORTANT!!

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $super+m mode "mouse"

bindsym $super+9 mode "$tools_menu"
set $tools_menu (f)iles (m)agnus
mode "$tools_menu" {
  bindsym f exec --no-startup-id thunar, mode "default"
  bindsym m exec --no-startup-id magnus, mode "default"

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# Set shut down, restart and locking features
bindsym $super+0 mode "$capse_system"
set $capse_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$capse_system" {
  bindsym l exec --no-startup-id lockit.sh, mode "default"
  bindsym s exec --no-startup-id i3exit suspend, mode "default"
  bindsym u exec --no-startup-id i3exit switch_user, mode "default"
  bindsym e exec --no-startup-id i3exit logout, mode "default"
  bindsym h exec --no-startup-id i3exit hibernate, mode "default"
  bindsym r exec --no-startup-id i3exit reboot, mode "default"
  bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

# exit system mode: "Enter" or "Escape"
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# terminator layouts
#bindsym $super+Return mode "$terminator_layouts"
#set $terminator_layouts (i)DE (b)lendItUp
#set $terminator_layouts (i)DE (g)unnison (b)lendItUp
#mode "$terminator_layouts" {
#  bindsym i exec terminator -l IDE, mode "default"
  #bindsym g exec terminator -l Gunnison, mode "default"
#  bindsym b exec terminator -l BIU, mode "default"
#  bindsym Return mode "default"
#  bindsym Escape mode "default"
#}

# bindsym $super+shift+s mode "$spotify_system"
bindsym $caps+s mode "$spotify_system"
set $spotify_system <p>  /    <n>   <r>   <i> 
mode "$spotify_system" {
  bindsym p exec sp play
    bindsym n exec sp next
    bindsym r exec sp prev
    bindsym i exec spotify_notification

    bindsym k exec sp next
    bindsym j exec sp prev
# exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $super+s exec ~/bin/myspotify.sh

# Now done via super+arrowkeys
# Resize window (you can also use the mouse for that)
 bindsym $caps+r mode "resize"
 mode "resize" {
         # These bindings trigger as soon as you enter the resize mode
         # Pressing left will shrink the window’s width.
         # Pressing right will grow the window’s width.
         # Pressing up will shrink the window’s height.
         # Pressing down will grow the window’s height.
         bindsym h resize shrink width 5 px or 5 ppt
         bindsym k resize grow height 5 px or 5 ppt
         bindsym j resize shrink height 5 px or 5 ppt
         bindsym l resize grow width 5 px or 5 ppt

         # same bindings, but for the arrow keys
         bindsym Left resize shrink width 10 px or 10 ppt
         bindsym Down resize grow height 10 px or 10 ppt
         bindsym Up resize shrink height 10 px or 10 ppt
         bindsym Right resize grow width 10 px or 10 ppt

         # exit resize mode: Enter or Escape
         bindsym Return mode "default"
         bindsym Escape mode "default"
 }

# Lock screen
#bindsym $caps+9 exec --no-startup-id blurlock

# Autostart applications
## adjustment of i3bar battery reading (only run at the very first login):
exec --no-startup-id xfce4-power-manager
exec --no-startup-id update-notifier
exec --no-startup-id parcellite
exec --no-startup-id nitrogen --restore
exec --no-startup-id dropbox start
#exec --no-startup-id guake
exec --no-startup-id /usr/bin/nm-applet

# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
#status_command i3status
  status_command i3blocks -c ~/.i3/i3blocks.conf
#status_command /usr/share/powerline/bindings/i3/powerline-i3.py

    mode hide
    modifier $caps

#status_command /home/kevin/.rvm/rubies/ruby-2.1.1/bin/ruby /home/kevin/.i3/i3status.rb
    position top

## please set your primary output first. Example: 'xrandr --output eDP1 --primary'
tray_output primary
#tray_output HDMI1
#tray_output none

    bindsym button4 nop
    bindsym button5 nop
#font pango:Cantarell,Icons 10
#font pango:DejaVuSansMonoForPowerline Nerd Font Book 10
    font pango:RobotoMono Nerd Font Book 12

    colors {
#background $transparent
      background #2B2C2B
#statusline #F9FAF9
#separator  #454947

#border backgr. text
	focused_workspace  #000000 #2980B9 #000000
	active_workspace   #000000 #CCCCCC #000000
	inactive_workspace #000000 #CCCCCC #000000
	urgent_workspace   #FF0000 #F2D7D5 #FF0000
    }
}

# hide/unhide i3status bar
bindsym ctrl+space bar mode toggle

# Theme colors
# class                 border  backgr. text    indic.  child_border
client.focused          #000000 #80423b #FFFFFF #000000
client.focused_inactive #FFFFFF #362d2c #FFFFFF #000000
client.unfocused        #FFFFFF #362d2c #FFFFFF #000000
client.urgent           #E27B45 #FDF6E3 #16A085 #268BD2
client.placeholder      #000000 #0c0c0c #ffffff #000000 #0c0c0c

client.background       #2B2C2B

